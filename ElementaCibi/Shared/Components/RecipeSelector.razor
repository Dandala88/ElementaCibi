@using ElementaCibi.Data.FdcModels.Constants
@using ElementaCibi.Data.Models.Recipe
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@using System.Text.Json
@inject ProtectedLocalStorage LocalStorage;

<select @onchange="OnRecipeChange">
    @if(Recipes.Count == 0)
    {
        <option selected>...</option>
    }
    @foreach (var r in Recipes)
    {
        if(Recipes.IndexOf(r) == 0 || r == newRecipe)
        {
            <option selected value="@JsonSerializer.Serialize(r)">@r.Name</option>
        }
        else
        {
            <option value="@JsonSerializer.Serialize(r)">@r.Name</option>
        }
    }
    <option value=@NewRecipeOption>New Recipe</option>
</select>
@if(showNewRecipeForm)
{
    <EditForm Model="@newRecipe" OnValidSubmit="NewRecipe">
        <DataAnnotationsValidator></DataAnnotationsValidator>
        <ValidationSummary></ValidationSummary>
        <InputText @bind-Value="newRecipe.Name"></InputText>
        <button type="submit" class="btn btn-primary">Add</button>
    </EditForm>
}
@code {
    public const string NewRecipeOption = "newrecipe";

    [Parameter]
    public List<Recipe> Recipes { get; set; } = new List<Recipe>();
    [Parameter]
    public EventCallback<Recipe> RecipeValueChanged { get; set; }
    public bool showNewRecipeForm;
    public Recipe newRecipe = new Recipe();

    protected async override Task OnInitializedAsync()
    {
        try
        {
            var storedRecipes = await LocalStorage.GetAsync<List<Recipe>>(UserData.RecipesKey);
            
            if(storedRecipes.Value != null)
                Recipes = storedRecipes.Value;
        }
        catch(Exception ex)
        {
            var t = ex;
        }
    }

    public void OnRecipeChange(ChangeEventArgs e)
    {
        showNewRecipeForm = false;
        if (e?.Value != null)
        {
            if ((string)e.Value == NewRecipeOption)
            {
                showNewRecipeForm = true;
            }
            else
            {
                var recipe = JsonSerializer.Deserialize<Recipe>((string)e.Value);
                RecipeValueChanged.InvokeAsync(recipe);
            }
        }
    }

    public void NewRecipe()
    {
        Recipes.Add(newRecipe);
        LocalStorage.SetAsync(UserData.RecipesKey, Recipes);
        showNewRecipeForm = false;
        newRecipe = new Recipe();
        //TODO set the select option to the new recipe
    }
}
