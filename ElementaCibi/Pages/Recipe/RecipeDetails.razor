@page "/food/recipe/details"
@using ElementaCibi.Data.Models.Recipe;
@using ElementaCibi.Shared.Components;

<h3>Recipe Details</h3>
<RecipeEditor @ref="recipeEditor" RecipeValueChanged="OnRecipeValueChanged"></RecipeEditor>
<table class="table">
    <tr>
        <th>Calories</th>
        <td>@calories</td>
    </tr>
    <tr>
        <th>Fiber</th>
        <td>@fiber</td>
    </tr>
    <tr>
        <th>Ratio</th>
        <td>@ratio</td>
    </tr>
    <tr>
        <th>💯</th>
        <td>@hundred</td>
    </tr>
</table>

<style>
    tr:nth-child(even) {
        background-color: #f2f2f2;
    }
</style>

@code {
    private RecipeEditor? recipeEditor;
    private float calories;
    private float fiber;
    private float ratio;
    private float hundred;

    private void OnRecipeValueChanged()
    {
        calories = GetCalories();
        fiber = GetFiber();
        ratio = GetRatio();
        hundred = GetHundred();
    }

    private float GetCalories()
    {
        if (recipeEditor?.SelectedRecipe != null)
        {
            var recipe = recipeEditor.SelectedRecipe;
            var calories = 0f;
            foreach (var i in recipe.Ingredients)
            {
                if (i.Food.Calories != null)
                {
                    var caloriesPerHundredGrams = i.Food.Calories.Amount;
                    var ratio = i.Portion.Grams / 100f;
                    calories += caloriesPerHundredGrams * ratio * i.Quantity;
                }
            }

            return calories;
        }
        return 0f;
    }

    private float GetFiber()
    {
        if (recipeEditor?.SelectedRecipe != null)
        {
            var recipe = recipeEditor.SelectedRecipe;
            var fiber = 0f;
            foreach (var i in recipe.Ingredients)
            {
                if (i.Food.Fiber != null)
                {
                    var fiberPerHundredGrams = i.Food.Fiber.Amount;
                    var ratio = i.Portion.Grams / 100f;
                    fiber += fiberPerHundredGrams * ratio * i.Quantity;
                }
            }

            return fiber;
        }
        return 0f;
    }

    private float GetRatio()
    {
        if (recipeEditor?.SelectedRecipe != null)
        {
            return fiber / calories;
        }
        return 0f;
    }

    private float GetHundred()
    {
        if (recipeEditor?.SelectedRecipe != null)
        {
            return 100 / (fiber / calories);
        }
        return 0f;
    }

}
