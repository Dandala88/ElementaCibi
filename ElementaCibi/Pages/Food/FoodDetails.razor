@page "/food/details/{id}"
@using ElementaCibi.Data.FdcModels.Search;
@using ElementaCibi.Data.FdcModels;
@using ElementaCibi.Data.Models;
@using ElementaCibi.Data.FdcModels.Constants;
@using ElementaCibi.Shared.Components
@inject Data.Services.FoodDataCentralService FoodDataCentralService;

<h2>Food Details</h2>
@if(Food != null)
{
    <h3>@Food.Description</h3>
    <PortionSelector Food=@Food PortionValueChanged="OnPortionValueChanged"></PortionSelector>
    <table class="table">
        <tr>
            <th>FDCId</th>
            <td>@Food.FdcId</td>
        </tr>
        <tr>
            <th>Data Type</th>
            <td>@Food.DataType</td>
        </tr>
        @if(!string.IsNullOrEmpty(Food.Brand))
        {
            <tr>
                <th>Brand</th>
                <td>@Food.Brand</td>
            </tr>
        }
        <tr>
            <th>Calories</th>
            <td>@Calories</td>
        </tr>
        <tr>
            <th>Fiber</th>
            <td>@Fiber</td>
        </tr>
        <tr>
            <th>Ratio</th>
            <td>
                @Food.Ratio
            </td>
        </tr>
        <tr>
            <th>💯</th>
            <td>
                @Food.Hundred
            </td>
        </tr>
    </table>

    <style>
        tr:nth-child(even) {
            background-color: #f2f2f2;
        }
    </style>
}

@code {
    [Parameter]
    public string? Id { get; set; }
    private Food Food = new Food();
    private float gramScale = 1f;
    public string Calories { get; set; } = string.Empty;
    public string Fiber { get; set; } = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        if (Id != null)
        {
            var result = await FoodDataCentralService.GetFoodByIdAsync(Id);
            if (result != null)
            {
                Food = result;
                SetNutrientValues();
            }
        }

    }

    private void OnPortionValueChanged(Portion portion)
    {
        if (portion != null)
        {
            var grams = portion.Grams;
            gramScale = grams / 100f;
            SetNutrientValues();
        }
    }

    private void SetNutrientValues()
    {
        if(Food?.Calories != null)
                Calories = $"{(Food.Calories.Amount * gramScale).ToString()} {Food.Calories.Unit}";
        if(Food?.Fiber != null)
            Fiber = $"{(Food.Fiber.Amount * gramScale).ToString()} {Food.Fiber.Unit}";
    }
}
